language: python
python:
  - "2.7"

# Cache PlatformIO packages using Travis CI container-based infrastructure
sudo: false
cache:
  directories:
    - "~/.platformio"

# Generated using: find examples -type f -name "*.ino" | rev | cut -d/ -f2- | rev | sed 's/^/    - PLATFORMIO_CI_SRC=/' > tmp.yml
env:
  - PLATFORMIO_CI_SRC=M5Stack_MultiApp_Firmware

install:
  - pip install -U platformio
  - export PLATFORMIO_BUILD_FLAGS="-DDEBUG_USB_HOST -DWIICAMERA -Wall -Werror -Wno-strict-aliasing"

  #
  # Libraries from PlatformIO Library Registry:
  #
  # http://platformio.org/lib/show/62/MIDI
  # http://platformio.org/lib/show/416/TinyGPS
  # http://platformio.org/lib/show/417/SPI4Teensy3
  #- platformio lib install 62 416 417
  #- platformio platform install https://github.com/platformio/platform-espressif32.git#feature/stage

script:
  #- platformio ci --board=uno --board=teensy31 --board=due --lib="."
  #- platformio ci -b esp32dev -b nano32 -b node32s --lib="."
    
  - echo -e "travis_fold:start:platformio_test_env_prepare"
  - pip install -U https://github.com/platformio/platformio/archive/develop.zip
  - platformio platform install https://github.com/platformio/platform-espressif32.git#feature/stage
  - sed -i 's/https:\/\/github\.com\/espressif\/arduino-esp32\.git/*/' ~/.platformio/platforms/espressif32_stage/platform.json
  - ln -s $TRAVIS_BUILD_DIR ~/.platformio/packages/framework-arduinoespressif32
  - echo -e "travis_fold:end:platformio_test_env_prepare"
  - echo -e "travis_fold:start:platformio_test"
  - "python -c \"import glob,os,subprocess,sys; map(lambda p: (sys.stdout.write('Library example: %s\\n' % p), subprocess.call(['pio', 'ci', p, '--board', 'esp32dev'])), set([os.path.dirname(p) for p in glob.glob('libraries/*/examples/*/*.ino') + glob.glob('libraries/*/examples/*/*/*.ino')]))\""
  - echo -e "travis_fold:end:platformio_test"
    
